%Question 1
man(adam).
man(peter).
man(paul).
man(jake).
man(chris).
man(bill).
woman(eve).
woman(marry).
woman(elina).
woman(stacy).
parent(adam, peter). %assume adam is peter's parent
parent(eve, peter).
parent(peter, paul). 
parent(marry, paul).
parent(marry, paul).
parent(adam, jake).
parent(eve, jake).
parent(jake, bill).
parent(elina, bill).

father(X, Y):- parent(X, Y), man(X).
mother(X, Y):- parent(X, Y), woman(X).
cousin(X, Y):- parent(A, X), parent(B, Y), parent(Z,A), parent(Z,B), X\=Y.

ancestor(X,Y):- parent(X,Y).
ancestor(X,Y):- parent(Z,Y),ancestor(X,Z), X\=Z.

relative(X,Y):- ancestor(A,X),ancestor(A,Y), X\=Y.

%quesiton 2
beat(kumar, zhao).
beat(kumar, wilson).
beat(wilson, zhao).

win(P, cash):- beat(P,_),!.
win(P, medal):- beat(_,P),!.
win(P,trophy):- beat(P,X),beat(Y,P), X\=Y.

%Question3
second_to_last([X,_], N):-  N = X.
second_to_last([_|List], N):- second_to_last(List, N).

%Question4
repeat_elem(X, 0, []).
repeat_elem(X, N, [X|Inter]):- N > 0,
    M is N-1, % for arithmetic operation
    repeat_elem(X, M, Inter).

%Question5
repeat_list([], _, []).
repeat_list([H|T], X, Final):- repeat_list(T, X, Inter),
    repeat_elem(H, X, Result), append(Result, Inter, Final).


























